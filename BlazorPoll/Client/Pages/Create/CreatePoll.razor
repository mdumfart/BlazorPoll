@page "/create/{question?}"
@using BlazorPoll.Client.Services
@inject NavigationManager NavigationManager
@inject IPollService PollService;

<div class="content-centered-horizontal content-centered-vertical create-container">
    <h1>Create a new Poll</h1>

    <EditForm Model="Poll" OnValidSubmit="ExecuteAddPoll">
        <ObjectGraphDataAnnotationsValidator />
        <div class="question-wrapper">
            <div class="question-header">
                What's on your mind?
            </div>
            <div class="input-group input-group-lg input-create-poll input-validation-wrapper">
                <InputText class="form-control input-validate input-question-create full-width" placeholder="Provide a qestion" @bind-Value="Poll.Question" />
                <div class="validation-message-wrapper">
                    <ValidationMessage For="@(() => Poll.Question)" />
                </div>
            </div>
            <div class="input-group input-group-lg input-create-poll input-validation-wrapper">
                <InputTextArea class="form-control input-validate input-question-create full-width" placeholder="Provide some additional info" @bind-Value="Poll.Description" />
            </div>
        </div>

        <div class="options-wrapper">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" checked>
                <label class="form-check-label" for="flexRadioDefault1">
                    Single choice
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2">
                <label class="form-check-label" for="flexRadioDefault2">
                    Multiple choice
                </label>
            </div>
        </div>

        <div class="answers-wrapper">
            @foreach (var answer in Poll.Answers)
            {
                <AnswerComp Item="answer" OnDeleteAnswer="@(() => DeleteAnswer(answer))" />
            }
            <button class="btn btn-primary btn-add-answer" @onclick="AddAnswer" disabled="@(CountAnswers >= 8)">
                <div class="nav-button-content">
                    <span class="fa fa-plus new-poll-icon"></span>
                </div>
            </button>
        </div>
        <button type="submit" class="btn btn-primary nav-button button-question-create">
            @if (IsLoading)
            {
                <Bounce Size="20px" Color="#fff" class="@(IsLoading? "loading-visible" : "loading-invisible")" />
            }
            else
            {
                <span class="@(!IsLoading? "loading-visible" : "loading-invisible")">Publish Poll</span>
            }
        </button>
    </EditForm>

</div>

@code {
    [Parameter]
    public string Question { get; set; }

    public Poll Poll { get; set; }
    private bool IsLoading { get; set; } = false;
    private int CountAnswers { get; set; } = 2;

    protected override void OnInitialized()
    {
        Poll = new Poll
        {
            Question = Question,
            Answers = new List<Answer> { new Answer(0), new Answer(1) }
        };
    }

    public void DeleteAnswer(Answer answer)
    {
        Poll.Answers.Remove(answer);
        CountAnswers--;

        ReorderAnswers();
    }

    private void ReorderAnswers()
    {
        int i = 0;

        foreach (var answer in Poll.Answers)
        {
            answer.Id = i;
            i++;
        }
    }

    private void AddAnswer()
    {
        Poll.Answers.Add(new Answer(Poll.Answers.Count));
        CountAnswers++;
    }

    private async void ExecuteAddPoll()
    {
        Poll.CreatedAt = DateTime.Now;

        if (!IsLoading)
        {
            IsLoading = true;
            var id = await PollService.AddPoll(Poll);
            NavigateToDetails(id);
            IsLoading = false;
        }
    }

    private void NavigateToDetails(Guid id)
    {
        if (String.IsNullOrEmpty(id.ToString()))
            // TODO: Handle error
            Console.WriteLine("Error creating poll");
        else
        {
            NavigationManager.NavigateTo($"poll/{id.ToString()}");
        }
    }
}
