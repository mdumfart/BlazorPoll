@page "/login"
@using BlazorPoll.Client.Services
@inject IUserService UserService
@inject NavigationManager NavigationManager

<EditForm Model="@User" OnValidSubmit="@Login">
    <CenteredBaseWrapper Header="User Login">
        <ContentTemplate>
            <DataAnnotationsValidator />
            <div class="input-group input-group-lg input-login input-validation-wrapper">
                <InputText class="form-control input-validate input-question-create full-width" placeholder="Username" @bind-Value="User.UserName" />
                <div class="validation-message-wrapper">
                    <ValidationMessage For="@(() => User.UserName)" />
                </div>
            </div>

            <div class="input-group input-group-lg input-login input-validation-wrapper">
                <InputText type="password" class="form-control input-validate input-question-create full-width" placeholder="Password" @bind-Value="User.Password" />
                <div class="validation-message-wrapper">
                    <ValidationMessage For="@(() => User.Password)" />
                </div>
            </div>
            <div class="d-flex justify-content-center full-width">
                <NavLink href="../register">
                    <span>You don't have an account?</span>
                </NavLink>
            </div>

        </ContentTemplate>
        <FooterTemplate>
            <button type="submit" class="btn btn-primary nav-button button-question-create">Log me in!</button>
        </FooterTemplate>
    </CenteredBaseWrapper>
</EditForm>


@code {
    UserCredentialsDto User { get; } = new UserCredentialsDto();

    public async void Login()
    {
        var loggedInUser = await UserService.Login(User);

        if (loggedInUser != null)
        {
            NavigationManager.NavigateTo("/profile", true);
        }
    }
}
