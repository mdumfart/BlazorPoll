@page "/poll/{id}"
@using BlazorPoll.Client.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject IPollService PollService;
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

@if (Poll == null)
{
    <NoPollFound />
}
else
{
    <h3>PollDetails</h3>
    @Poll.Question

    <button @onclick="Send">Click me</button>
}

@code {
    [Parameter]
    public string Id { get; set; }
    public Poll Poll { get; set; }
    private IPollHubService _pollHubService;


    protected override async Task OnInitializedAsync()
    {
        Guid guidFromParams = Guid.Empty;

        try
        {
            guidFromParams = new Guid(Id);
            Poll = await GetPollByIdAsync(guidFromParams);
        }
        catch (Exception e)
        {
            // When Guid creation or http call fails
            Poll = null;
        }

        if (Poll != null)
        {
            _pollHubService = new PollHubService(NavigationManager.ToAbsoluteUri("/pollhub").ToString());
            await _pollHubService.StartPollHubConnection(Poll);
        }
    }

    public async Task Send()
    {
        await _pollHubService.Send(Poll);
    }


    private async Task<Poll> GetPollByIdAsync(Guid id)
    {
        return await PollService.GetPollById(id);
    }

    public async ValueTask DisposeAsync()
    {
        await _pollHubService.Dispose(Poll);
    }
}
