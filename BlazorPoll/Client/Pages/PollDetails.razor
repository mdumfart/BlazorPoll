@page "/poll/{id}"
@using BlazorPoll.Client.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject IPollService PollService;
@inject NavigationManager NavigationManager

@if (Poll == null)
{
    <NoPollFound />
}
else
{
    <h3>PollDetails</h3>
    @Poll.Question
}

@code {
    [Parameter]
    public string Id { get; set; }

    public Poll Poll { get; set; }

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        Guid guidFromParams = Guid.Empty;

        try
        {
            guidFromParams = new Guid(Id);
            Poll = await GetPollByIdAsync(guidFromParams);
        }
        catch (Exception e)
        {
            // When Guid creation or http call fails
            Poll = null;
        }

        if (Poll != null)
            await StartPollHubConnection();
    }

    private async Task StartPollHubConnection()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            
        });

        await hubConnection.StartAsync();
    }

    private async Task<Poll> GetPollByIdAsync(Guid id)
    {
        return await PollService.GetPollById(id);
    }

}
