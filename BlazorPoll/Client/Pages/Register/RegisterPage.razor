@page "/register"
@using BlazorPoll.Client.Services
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<EditForm Model="@User" OnValidSubmit="@Login">
    <CenteredBaseWrapperComponent Header="Register a new account">
        <ContentTemplate>
            <DataAnnotationsValidator />
            <div class="input-group input-group-lg input-login input-validation-wrapper">
                <InputText class="form-control input-validate input-question-create full-width" placeholder="Username" @bind-Value="User.UserName" />
                <div class="validation-message-wrapper">
                    <ValidationMessage For="@(() => User.UserName)" />
                </div>
            </div>

            <div class="input-group input-group-lg input-login input-validation-wrapper">
                <InputText type="password" class="form-control input-validate input-question-create full-width" placeholder="Password" @bind-Value="User.Password" />
                <div class="validation-message-wrapper">
                    <ValidationMessage For="@(() => User.Password)" />
                </div>
            </div>

            <div class="input-group input-group-lg input-login input-validation-wrapper">
                <InputText type="password" class="form-control input-validate input-question-create full-width" placeholder="Confirm Password" @bind-Value="User.PasswordConfirm" />
                <div class="validation-message-wrapper">
                    <ValidationMessage For="@(() => User.PasswordConfirm)" />
                </div>
            </div>
        </ContentTemplate>
        <FooterTemplate>
            <button type="submit" class="btn btn-primary nav-button button-question-create">Create account!</button>
        </FooterTemplate>
    </CenteredBaseWrapperComponent>
</EditForm>

@code {
    UserDetailsDto User { get; } = new UserDetailsDto();
    private bool _showErrors;
    private IEnumerable<string> _errors;

    public async void Login()
    {
        _showErrors = false;

        var userCredentials = new UserCredentialsDto() { UserName = User.UserName, Password = User.Password };

        var result = await UserService.Register(userCredentials);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            foreach (var error in result.Errors)
            {
                ToastService.ShowError(error.ToString(), "Registration not successful");
            }
        }
    }
}